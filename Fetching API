------------------ Fetching API using fetch,axios and then handle error and Loading effect------------------ https://jsonplaceholder.typicode.com/


import React, {useEffect, useState} from 'react' 
import './App.css'
import axios from 'axios';

function App() {

  // const [data,setData] = useState([]);
  // useEffect(() => {
  //   fetch('https://jsonplaceholder.typicode.com/todos/1')
  //     .then(response => response.json())
  //     .then(json => setData(json));
  // },[])

  const [data,setData] = useState([]);
  useEffect(()=>{
    fetch('https://jsonplaceholder.typicode.com/posts')
    .then(response => response.json())
    .then(json => setData(json));
  },[])

  const [loading,setLoading] = useState(false);
  const [error,setError] = useState(null);
  
  const [info,setInfo] =  useState([]);
  useEffect(()=>{
    setLoading(true);
    fetch('https://jsonplaceholder.typicode.com/albums')
    .then(response => response.json())
    // .then(json => setInfo(json))
    .then(json => {
      setInfo(json);
      setLoading(false);
       // throw new Error(`Something went Wrong`)
    })
    .catch((error)=> {
      console.log(`Error fetching data: `,error);
      setError(`Failed to fetch the data`);
      
    });
    // .then(json=>{
    //   setData(json);
    //   setLoading(false);
    // });
  })

  const [tech, setTech] = useState([]);
  useEffect(()=>{
    axios('https://jsonplaceholder.typicode.com/albums')
    .then((response) =>{
      setTech(response)
      console.log(response)
    });
  },[])

//  if(loading){
//   return <p>Loading....</p>
//  }

if(error){
  return <p>{error}</p>
}
 
  return(
    <div>
      <h1>API's</h1>
      <ul>
        {data.map((post)=>(
          <li key={post.id}>
            <p><strong>{post.title}</strong></p>
            <p>{post.body}</p>
          </li>
        ))}
      </ul>

      <h1>Albums</h1>
      <ul>
        {info.map((post)=>(
          <li key={post.id}>
            <p><strong>{post.title}</strong></p>
          </li>
        ))}
      </ul>

      <h1>Albums 2</h1>
      <ul>
        {tech.map((post)=>{
          <li key={post.id}>
            <p><strong>{post.title}</strong></p>
          </li>
        })}
      </ul>
     
    </div>
  )
}

export default App

/** <p>todo id : {data.id}</p>
     <p>User title:{data.title}</p>
     <p>User id:{data.userId}</p> */
